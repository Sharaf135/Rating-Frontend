{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\majas\\\\OneDrive\\\\Desktop\\\\ReviewAndRatings-MERN-main\\\\frontend\\\\src\\\\Pages\\\\UserHome.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport axios from 'axios';\nimport productImage from '../images/productImage.jpg'; // Import the image\nimport ReactStars from 'react-rating-star-with-type';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserHome() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [newReviews, setNewReviews] = useState({}); // State to manage new reviews for each product\n  const [validationErrors, setValidationErrors] = useState({}); // State to manage validation errors\n\n  useEffect(() => {\n    // Fetch products from the API when the component mounts\n    axios.get('http://localhost:4000/api/products') // Update the API endpoint as needed\n    .then(response => {\n      setProducts(response.data);\n    }).catch(error => {\n      console.error('Error fetching products:', error);\n    });\n  }, []);\n\n  // Function to handle submitting a new review\n  const handleSubmitReview = productId => {\n    // Get the new review data for the specific product\n    const newReview = newReviews[productId];\n    if (!newReview) {\n      return; // Don't submit if no review data is available\n    }\n\n    // Validate the rating and comment before submission\n    const errors = {};\n    if (newReview.rating < 1 || newReview.rating > 5) {\n      errors[productId] = {\n        ...errors[productId],\n        rating: 'Rating must be between 1 and 5'\n      };\n    }\n    if (!newReview.comment.trim()) {\n      errors[productId] = {\n        ...errors[productId],\n        comment: 'Comment cannot be empty'\n      };\n    }\n\n    // If there are validation errors, update the state and stop submission\n    if (Object.keys(errors).length > 0) {\n      setValidationErrors(errors);\n      return;\n    }\n\n    // Send a POST request to your API to add the review to the database\n    axios.post(`http://localhost:4000/api/reviews/${productId}/reviews`, newReview).then(response => {\n      // Handle success (e.g., refresh the product list to display the new review)\n      // You can also reset the new review form fields here if needed\n      console.log('Review added:', response.data);\n\n      // Reset the new review and validation errors for this product\n      setNewReviews({\n        ...newReviews,\n        [productId]: {\n          rating: 0,\n          comment: ''\n        }\n      });\n      setValidationErrors({});\n\n      // Refresh the product list to display the new review (optional)\n      axios.get('http://localhost:4000/api/products').then(response => {\n        setProducts(response.data);\n      }).catch(error => {\n        console.error('Error fetching products:', error);\n      });\n    }).catch(error => {\n      console.error('Error adding review:', error);\n    });\n  };\n\n  // Function to update the new review data in the state\n  const handleReviewChange = (productId, rating, comment) => {\n    console.log(`Product ID: ${productId}, Rating: ${rating}, Comment: ${comment}`);\n    setNewReviews({\n      ...newReviews,\n      [productId]: {\n        rating,\n        comment\n      }\n    });\n  };\n\n  // Function to delete a review\n  const deleteReview = (productId, reviewId, comment) => {\n    if (window.confirm(`Are you sure you want to delete \"${comment}\"?`)) {\n      // Send a DELETE request to the API endpoint\n      axios.delete(`http://localhost:4000/api/reviews/${productId}/reviews/${reviewId}`).then(response => {\n        if (response.status === 200) {\n          // Review deleted successfully\n          console.log('Review deleted successfully');\n          alert('Data Deleted');\n          // You can perform additional actions here if needed\n\n          // Refresh the product list to remove the deleted review\n          axios.get('http://localhost:4000/api/products').then(response => {\n            setProducts(response.data);\n          }).catch(error => {\n            console.error('Error fetching products:', error);\n          });\n        } else {\n          // Error deleting the review\n          console.error('Error deleting the review');\n        }\n      }).catch(error => {\n        console.error('Error deleting the review:', error);\n      });\n    } else {\n      alert('Canceled');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: products.map(product => {\n        var _validationErrors$pro, _newReviews$product$_, _validationErrors$pro2, _validationErrors$pro3, _validationErrors$pro4, _newReviews$product$_3, _validationErrors$pro5, _validationErrors$pro6;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: '18rem',\n              margin: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: productImage,\n              alt: product.name // Provide alt text for accessibility\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\" \", product.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n              className: \"list-group-flush\",\n              children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [\"Price: $\", product.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n              className: \"list-group-flush\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Reviews:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), product.reviews.map((review, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(ReactStars, {\n                    style: {\n                      margin: '20px',\n                      paddingLeft: '60px'\n                    },\n                    value: review.rating,\n                    edit: false,\n                    activeColors: ['red', 'orange', '#FFCE00', '#9177FF', '#8568FC']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [\" Comment: \", review.comment]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/update/${product._id}/${review._id}`,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline-info\",\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-danger\",\n                    onClick: () => deleteReview(product._id, review._id, review.comment),\n                    style: {\n                      marginLeft: '10px'\n                    } // Add margin to create space\n                    ,\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"review-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Add a Review:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"1\",\n                  max: \"5\",\n                  className: `form-control ${(_validationErrors$pro = validationErrors[product._id]) !== null && _validationErrors$pro !== void 0 && _validationErrors$pro.rating ? 'is-invalid' : ''}`,\n                  placeholder: \"Enter rating (1-5)\",\n                  value: ((_newReviews$product$_ = newReviews[product._id]) === null || _newReviews$product$_ === void 0 ? void 0 : _newReviews$product$_.rating) || 0,\n                  onChange: e => {\n                    var _newReviews$product$_2;\n                    return handleReviewChange(product._id, parseInt(e.target.value) || 0, ((_newReviews$product$_2 = newReviews[product._id]) === null || _newReviews$product$_2 === void 0 ? void 0 : _newReviews$product$_2.comment) || '');\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this), \"onChange\", ((_validationErrors$pro2 = validationErrors[product._id]) === null || _validationErrors$pro2 === void 0 ? void 0 : _validationErrors$pro2.rating) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: (_validationErrors$pro3 = validationErrors[product._id]) === null || _validationErrors$pro3 === void 0 ? void 0 : _validationErrors$pro3.rating\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: `form-control ${(_validationErrors$pro4 = validationErrors[product._id]) !== null && _validationErrors$pro4 !== void 0 && _validationErrors$pro4.comment ? 'is-invalid' : ''}`,\n                  placeholder: \"Enter your review here...\",\n                  value: ((_newReviews$product$_3 = newReviews[product._id]) === null || _newReviews$product$_3 === void 0 ? void 0 : _newReviews$product$_3.comment) || '',\n                  onChange: e => {\n                    var _newReviews$product$_4;\n                    return handleReviewChange(product._id, ((_newReviews$product$_4 = newReviews[product._id]) === null || _newReviews$product$_4 === void 0 ? void 0 : _newReviews$product$_4.rating) || 0, e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this), ((_validationErrors$pro5 = validationErrors[product._id]) === null || _validationErrors$pro5 === void 0 ? void 0 : _validationErrors$pro5.comment) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: (_validationErrors$pro6 = validationErrors[product._id]) === null || _validationErrors$pro6 === void 0 ? void 0 : _validationErrors$pro6.comment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary\",\n                  onClick: () => handleSubmitReview(product._id),\n                  children: \"Add New Review\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, product._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(UserHome, \"GUSku0EYOmKM4DYJuyBcCThsEHY=\");\n_c = UserHome;\nexport default UserHome;\nvar _c;\n$RefreshReg$(_c, \"UserHome\");","map":{"version":3,"names":["React","useEffect","useState","ListGroup","Card","axios","productImage","ReactStars","Button","Link","jsxDEV","_jsxDEV","UserHome","_s","products","setProducts","newReviews","setNewReviews","validationErrors","setValidationErrors","get","then","response","data","catch","error","console","handleSubmitReview","productId","newReview","errors","rating","comment","trim","Object","keys","length","post","log","handleReviewChange","deleteReview","reviewId","window","confirm","delete","status","alert","className","children","map","product","_validationErrors$pro","_newReviews$product$_","_validationErrors$pro2","_validationErrors$pro3","_validationErrors$pro4","_newReviews$product$_3","_validationErrors$pro5","_validationErrors$pro6","style","width","margin","Img","variant","src","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","Text","description","Item","price","reviews","review","index","paddingLeft","value","edit","activeColors","to","_id","onClick","marginLeft","type","min","max","placeholder","onChange","e","_newReviews$product$_2","parseInt","target","_newReviews$product$_4","_c","$RefreshReg$"],"sources":["C:/Users/majas/OneDrive/Desktop/ReviewAndRatings-MERN-main/frontend/src/Pages/UserHome.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Card from 'react-bootstrap/Card'\r\nimport axios from 'axios'\r\nimport productImage from '../images/productImage.jpg' // Import the image\r\nimport ReactStars from 'react-rating-star-with-type'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction UserHome() {\r\n  const [products, setProducts] = useState([])\r\n  const [newReviews, setNewReviews] = useState({}) // State to manage new reviews for each product\r\n  const [validationErrors, setValidationErrors] = useState({}) // State to manage validation errors\r\n\r\n  useEffect(() => {\r\n    // Fetch products from the API when the component mounts\r\n    axios\r\n      .get('http://localhost:4000/api/products') // Update the API endpoint as needed\r\n      .then((response) => {\r\n        setProducts(response.data)\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching products:', error)\r\n      })\r\n  }, [])\r\n\r\n  // Function to handle submitting a new review\r\n  const handleSubmitReview = (productId) => {\r\n    // Get the new review data for the specific product\r\n    const newReview = newReviews[productId]\r\n    if (!newReview) {\r\n      return // Don't submit if no review data is available\r\n    }\r\n\r\n    // Validate the rating and comment before submission\r\n    const errors = {}\r\n    if (newReview.rating < 1 || newReview.rating > 5) {\r\n      errors[productId] = {\r\n        ...errors[productId],\r\n        rating: 'Rating must be between 1 and 5',\r\n      }\r\n    }\r\n    if (!newReview.comment.trim()) {\r\n      errors[productId] = {\r\n        ...errors[productId],\r\n        comment: 'Comment cannot be empty',\r\n      }\r\n    }\r\n\r\n    // If there are validation errors, update the state and stop submission\r\n    if (Object.keys(errors).length > 0) {\r\n      setValidationErrors(errors)\r\n      return\r\n    }\r\n\r\n    // Send a POST request to your API to add the review to the database\r\n    axios\r\n      .post(`http://localhost:4000/api/reviews/${productId}/reviews`, newReview)\r\n      .then((response) => {\r\n        // Handle success (e.g., refresh the product list to display the new review)\r\n        // You can also reset the new review form fields here if needed\r\n        console.log('Review added:', response.data)\r\n\r\n        // Reset the new review and validation errors for this product\r\n        setNewReviews({\r\n          ...newReviews,\r\n          [productId]: { rating: 0, comment: '' },\r\n        })\r\n        setValidationErrors({})\r\n\r\n        // Refresh the product list to display the new review (optional)\r\n        axios\r\n          .get('http://localhost:4000/api/products')\r\n          .then((response) => {\r\n            setProducts(response.data)\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error fetching products:', error)\r\n          })\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error adding review:', error)\r\n      })\r\n  }\r\n\r\n  // Function to update the new review data in the state\r\n  const handleReviewChange = (productId, rating, comment) => {\r\n    console.log(\r\n      `Product ID: ${productId}, Rating: ${rating}, Comment: ${comment}`\r\n    )\r\n    setNewReviews({\r\n      ...newReviews,\r\n      [productId]: { rating, comment },\r\n    })\r\n  }\r\n\r\n  // Function to delete a review\r\n  const deleteReview = (productId, reviewId, comment) => {\r\n    if (window.confirm(`Are you sure you want to delete \"${comment}\"?`)) {\r\n      // Send a DELETE request to the API endpoint\r\n      axios\r\n        .delete(\r\n          `http://localhost:4000/api/reviews/${productId}/reviews/${reviewId}`\r\n        )\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            // Review deleted successfully\r\n            console.log('Review deleted successfully')\r\n            alert('Data Deleted')\r\n            // You can perform additional actions here if needed\r\n\r\n            // Refresh the product list to remove the deleted review\r\n            axios\r\n              .get('http://localhost:4000/api/products')\r\n              .then((response) => {\r\n                setProducts(response.data)\r\n              })\r\n              .catch((error) => {\r\n                console.error('Error fetching products:', error)\r\n              })\r\n          } else {\r\n            // Error deleting the review\r\n            console.error('Error deleting the review')\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error deleting the review:', error)\r\n        })\r\n    } else {\r\n      alert('Canceled')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='row'>\r\n        {products.map((product) => (\r\n          <div key={product._id} className='col-md-3 mb-4'>\r\n            <Card style={{ width: '18rem', margin: '20px' }}>\r\n              {/* Use the imported image as the source */}\r\n              <Card.Img\r\n                variant='top'\r\n                src={productImage}\r\n                alt={product.name} // Provide alt text for accessibility\r\n              />\r\n              <Card.Body>\r\n                <Card.Title>{product.name}</Card.Title>\r\n                <Card.Text> {product.description}</Card.Text>\r\n              </Card.Body>\r\n              <ListGroup className='list-group-flush'>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n              </ListGroup>\r\n              <ListGroup className='list-group-flush'>\r\n                <h5>Reviews:</h5>\r\n                {product.reviews.map((review, index) => (\r\n                  <div key={index}>\r\n                    <Card.Body>\r\n                      <ReactStars\r\n                        style={{ margin: '20px', paddingLeft: '60px' }}\r\n                        value={review.rating}\r\n                        edit={false}\r\n                        activeColors={[\r\n                          'red',\r\n                          'orange',\r\n                          '#FFCE00',\r\n                          '#9177FF',\r\n                          '#8568FC',\r\n                        ]}\r\n                      />\r\n                      <Card.Text> Comment: {review.comment}</Card.Text>\r\n                      <Link to={`/update/${product._id}/${review._id}`}>\r\n                        <Button variant='outline-info'>Edit</Button>\r\n                      </Link>\r\n                      <Button\r\n                        variant='outline-danger'\r\n                        onClick={() =>\r\n                          deleteReview(product._id, review._id, review.comment)\r\n                        }\r\n                        style={{ marginLeft: '10px' }} // Add margin to create space\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </Card.Body>\r\n                  </div>\r\n                ))}\r\n              </ListGroup>\r\n              {/* Add Review Form */}\r\n              <div className='review-form'>\r\n                <h5>Add a Review:</h5>\r\n                <div className='mb-2'>\r\n                  <input\r\n                    type='number'\r\n                    min='1'\r\n                    max='5'\r\n                    className={`form-control ${\r\n                      validationErrors[product._id]?.rating ? 'is-invalid' : ''\r\n                    }`}\r\n                    placeholder='Enter rating (1-5)'\r\n                    value={newReviews[product._id]?.rating || 0}\r\n                    onChange={(e) =>\r\n                      handleReviewChange(\r\n                        product._id,\r\n                        parseInt(e.target.value) || 0,\r\n                        newReviews[product._id]?.comment || ''\r\n                      )\r\n                    }\r\n                  />\r\n                  onChange{validationErrors[product._id]?.rating && (\r\n                    <div className='invalid-feedback'>\r\n                      {validationErrors[product._id]?.rating}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='mb-2'>\r\n                  <textarea\r\n                    className={`form-control ${\r\n                      validationErrors[product._id]?.comment ? 'is-invalid' : ''\r\n                    }`}\r\n                    placeholder='Enter your review here...'\r\n                    value={newReviews[product._id]?.comment || ''}\r\n                    onChange={(e) =>\r\n                      handleReviewChange(\r\n                        product._id,\r\n                        newReviews[product._id]?.rating || 0,\r\n                        e.target.value\r\n                      )\r\n                    }\r\n                  ></textarea>\r\n                  {validationErrors[product._id]?.comment && (\r\n                    <div className='invalid-feedback'>\r\n                      {validationErrors[product._id]?.comment}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <Card.Body>\r\n                  <button\r\n                    className='btn btn-primary'\r\n                    onClick={() => handleSubmitReview(product._id)}\r\n                  >\r\n                    Add New Review\r\n                  </button>\r\n                </Card.Body>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserHome\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}