{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\majas\\\\OneDrive\\\\Desktop\\\\ReviewAndRatings-MERN-main\\\\frontend\\\\src\\\\Pages\\\\UserHome.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport axios from 'axios';\nimport productImage from '../images/productImage.jpg'; // Import the image\nimport ReactStars from 'react-rating-star-with-type';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserHome() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [newReviews, setNewReviews] = useState({}); // State to manage new reviews for each product\n  const [validationErrors, setValidationErrors] = useState({}); // State to manage validation errors\n  const [searchQuery, setSearchQuery] = useState('');\n  useEffect(() => {\n    // Fetch products from the API when the component mounts\n    axios.get('http://localhost:4000/api/products') // Update the API endpoint as needed\n    .then(response => {\n      setProducts(response.data);\n    }).catch(error => {\n      console.error('Error fetching products:', error);\n    });\n  }, []);\n  const handleSearchInputChange = e => {\n    setSearchQuery(e.target.value);\n  };\n  const filteredProducts = products.filter(product => product.name.toLowerCase().includes(searchQuery.toLowerCase()));\n\n  // Function to handle submitting a new review\n  const handleSubmitReview = productId => {\n    // Get the new review data for the specific product\n    const newReview = newReviews[productId];\n    if (!newReview) {\n      return; // Don't submit if no review data is available\n    }\n\n    // Validate the rating and comment before submission\n    const errors = {};\n    if (newReview.rating < 1 || newReview.rating > 5) {\n      errors[productId] = {\n        ...errors[productId],\n        rating: 'Rating must be between 1 and 5'\n      };\n    }\n    if (!newReview.comment.trim()) {\n      errors[productId] = {\n        ...errors[productId],\n        comment: 'Comment cannot be empty'\n      };\n    }\n\n    // If there are validation errors, update the state and stop submission\n    if (Object.keys(errors).length > 0) {\n      setValidationErrors(errors);\n      return;\n    }\n\n    // Send a POST request to your API to add the review to the database\n    axios.post(`http://localhost:4000/api/reviews/${productId}/reviews`, newReview).then(response => {\n      // Handle success (e.g., refresh the product list to display the new review)\n      // You can also reset the new review form fields here if needed\n      console.log('Review added:', response.data);\n\n      // Reset the new review and validation errors for this product\n      setNewReviews({\n        ...newReviews,\n        [productId]: {\n          rating: 0,\n          comment: ''\n        }\n      });\n      setValidationErrors({});\n\n      // Refresh the product list to display the new review (optional)\n      axios.get('http://localhost:4000/api/products').then(response => {\n        setProducts(response.data);\n      }).catch(error => {\n        console.error('Error fetching products:', error);\n      });\n    }).catch(error => {\n      console.error('Error adding review:', error);\n    });\n  };\n\n  // Function to update the new review data in the state\n  const handleReviewChange = (productId, rating, comment) => {\n    console.log(`Product ID: ${productId}, Rating: ${rating}, Comment: ${comment}`);\n    setNewReviews({\n      ...newReviews,\n      [productId]: {\n        rating,\n        comment\n      }\n    });\n  };\n\n  // Function to delete a review\n  const deleteReview = (productId, reviewId, comment) => {\n    if (window.confirm(`Are you sure you want to delete \"${comment}\"?`)) {\n      // Send a DELETE request to the API endpoint\n      axios.delete(`http://localhost:4000/api/reviews/${productId}/reviews/${reviewId}`).then(response => {\n        if (response.status === 200) {\n          // Review deleted successfully\n          console.log('Review deleted successfully');\n          alert('Data Deleted');\n          // You can perform additional actions here if needed\n\n          // Refresh the product list to remove the deleted review\n          axios.get('http://localhost:4000/api/products').then(response => {\n            setProducts(response.data);\n          }).catch(error => {\n            console.error('Error fetching products:', error);\n          });\n        } else {\n          // Error deleting the review\n          console.error('Error deleting the review');\n        }\n      }).catch(error => {\n        console.error('Error deleting the review:', error);\n      });\n    } else {\n      alert('Canceled');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: products.map(product => {\n        var _validationErrors$pro, _newReviews$product$_, _validationErrors$pro2, _validationErrors$pro3, _validationErrors$pro4, _newReviews$product$_3, _validationErrors$pro5, _validationErrors$pro6;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: '18rem',\n              margin: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: productImage,\n              alt: product.name // Provide alt text for accessibility\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\" \", product.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n              className: \"list-group-flush\",\n              children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [\"Price: $\", product.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n              className: \"list-group-flush\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Reviews:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), product.reviews.map((review, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(ReactStars, {\n                    style: {\n                      margin: '20px',\n                      paddingLeft: '60px'\n                    },\n                    value: review.rating,\n                    edit: false,\n                    activeColors: ['red', 'orange', '#FFCE00', '#9177FF', '#8568FC']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [\" Comment: \", review.comment]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/update/${product._id}/${review._id}`,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline-info\",\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-danger\",\n                    onClick: () => deleteReview(product._id, review._id, review.comment),\n                    style: {\n                      marginLeft: '10px'\n                    } // Add margin to create space\n                    ,\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"review-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Add a Review:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"1\",\n                  max: \"5\",\n                  className: `form-control ${(_validationErrors$pro = validationErrors[product._id]) !== null && _validationErrors$pro !== void 0 && _validationErrors$pro.rating ? 'is-invalid' : ''}`,\n                  placeholder: \"Enter rating (1-5)\",\n                  value: ((_newReviews$product$_ = newReviews[product._id]) === null || _newReviews$product$_ === void 0 ? void 0 : _newReviews$product$_.rating) || 0,\n                  onChange: e => {\n                    var _newReviews$product$_2;\n                    return handleReviewChange(product._id, parseInt(e.target.value) || 0, ((_newReviews$product$_2 = newReviews[product._id]) === null || _newReviews$product$_2 === void 0 ? void 0 : _newReviews$product$_2.comment) || '');\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this), ((_validationErrors$pro2 = validationErrors[product._id]) === null || _validationErrors$pro2 === void 0 ? void 0 : _validationErrors$pro2.rating) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: (_validationErrors$pro3 = validationErrors[product._id]) === null || _validationErrors$pro3 === void 0 ? void 0 : _validationErrors$pro3.rating\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: `form-control ${(_validationErrors$pro4 = validationErrors[product._id]) !== null && _validationErrors$pro4 !== void 0 && _validationErrors$pro4.comment ? 'is-invalid' : ''}`,\n                  placeholder: \"Enter your review here...\",\n                  value: ((_newReviews$product$_3 = newReviews[product._id]) === null || _newReviews$product$_3 === void 0 ? void 0 : _newReviews$product$_3.comment) || '',\n                  onChange: e => {\n                    var _newReviews$product$_4;\n                    return handleReviewChange(product._id, ((_newReviews$product$_4 = newReviews[product._id]) === null || _newReviews$product$_4 === void 0 ? void 0 : _newReviews$product$_4.rating) || 0, e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this), ((_validationErrors$pro5 = validationErrors[product._id]) === null || _validationErrors$pro5 === void 0 ? void 0 : _validationErrors$pro5.comment) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: (_validationErrors$pro6 = validationErrors[product._id]) === null || _validationErrors$pro6 === void 0 ? void 0 : _validationErrors$pro6.comment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary\",\n                  onClick: () => handleSubmitReview(product._id),\n                  children: \"Add New Review\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, product._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n_s(UserHome, \"J3J1rasFBtdu3470AuD5LHltcJY=\");\n_c = UserHome;\nexport default UserHome;\nvar _c;\n$RefreshReg$(_c, \"UserHome\");","map":{"version":3,"names":["React","useEffect","useState","ListGroup","Card","axios","productImage","ReactStars","Button","Link","jsxDEV","_jsxDEV","UserHome","_s","products","setProducts","newReviews","setNewReviews","validationErrors","setValidationErrors","searchQuery","setSearchQuery","get","then","response","data","catch","error","console","handleSearchInputChange","e","target","value","filteredProducts","filter","product","name","toLowerCase","includes","handleSubmitReview","productId","newReview","errors","rating","comment","trim","Object","keys","length","post","log","handleReviewChange","deleteReview","reviewId","window","confirm","delete","status","alert","className","children","map","_validationErrors$pro","_newReviews$product$_","_validationErrors$pro2","_validationErrors$pro3","_validationErrors$pro4","_newReviews$product$_3","_validationErrors$pro5","_validationErrors$pro6","style","width","margin","Img","variant","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","Text","description","Item","price","reviews","review","index","paddingLeft","edit","activeColors","to","_id","onClick","marginLeft","type","min","max","placeholder","onChange","_newReviews$product$_2","parseInt","_newReviews$product$_4","_c","$RefreshReg$"],"sources":["C:/Users/majas/OneDrive/Desktop/ReviewAndRatings-MERN-main/frontend/src/Pages/UserHome.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Card from 'react-bootstrap/Card'\r\nimport axios from 'axios'\r\nimport productImage from '../images/productImage.jpg' // Import the image\r\nimport ReactStars from 'react-rating-star-with-type'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction UserHome() {\r\n  const [products, setProducts] = useState([])\r\n  const [newReviews, setNewReviews] = useState({}) // State to manage new reviews for each product\r\n  const [validationErrors, setValidationErrors] = useState({}) // State to manage validation errors\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n\r\n  useEffect(() => {\r\n    // Fetch products from the API when the component mounts\r\n    axios\r\n      .get('http://localhost:4000/api/products') // Update the API endpoint as needed\r\n      .then((response) => {\r\n        setProducts(response.data)\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching products:', error)\r\n      })\r\n  }, [])\r\n\r\n  const handleSearchInputChange = (e) => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n  const filteredProducts = products.filter((product) =>\r\n    product.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  // Function to handle submitting a new review\r\n  const handleSubmitReview = (productId) => {\r\n    // Get the new review data for the specific product\r\n    const newReview = newReviews[productId]\r\n    if (!newReview) {\r\n      return // Don't submit if no review data is available\r\n    }\r\n\r\n    // Validate the rating and comment before submission\r\n    const errors = {}\r\n    if (newReview.rating < 1 || newReview.rating > 5) {\r\n      errors[productId] = {\r\n        ...errors[productId],\r\n        rating: 'Rating must be between 1 and 5',\r\n      }\r\n    }\r\n    if (!newReview.comment.trim()) {\r\n      errors[productId] = {\r\n        ...errors[productId],\r\n        comment: 'Comment cannot be empty',\r\n      }\r\n    }\r\n\r\n    // If there are validation errors, update the state and stop submission\r\n    if (Object.keys(errors).length > 0) {\r\n      setValidationErrors(errors)\r\n      return\r\n    }\r\n\r\n    // Send a POST request to your API to add the review to the database\r\n    axios\r\n      .post(`http://localhost:4000/api/reviews/${productId}/reviews`, newReview)\r\n      .then((response) => {\r\n        // Handle success (e.g., refresh the product list to display the new review)\r\n        // You can also reset the new review form fields here if needed\r\n        console.log('Review added:', response.data)\r\n\r\n        // Reset the new review and validation errors for this product\r\n        setNewReviews({\r\n          ...newReviews,\r\n          [productId]: { rating: 0, comment: '' },\r\n        })\r\n        setValidationErrors({})\r\n\r\n        // Refresh the product list to display the new review (optional)\r\n        axios\r\n          .get('http://localhost:4000/api/products')\r\n          .then((response) => {\r\n            setProducts(response.data)\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error fetching products:', error)\r\n          })\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error adding review:', error)\r\n      })\r\n  }\r\n\r\n  // Function to update the new review data in the state\r\n  const handleReviewChange = (productId, rating, comment) => {\r\n    console.log(\r\n      `Product ID: ${productId}, Rating: ${rating}, Comment: ${comment}`\r\n    )\r\n    setNewReviews({\r\n      ...newReviews,\r\n      [productId]: { rating, comment },\r\n    })\r\n  }\r\n\r\n  // Function to delete a review\r\n  const deleteReview = (productId, reviewId, comment) => {\r\n    if (window.confirm(`Are you sure you want to delete \"${comment}\"?`)) {\r\n      // Send a DELETE request to the API endpoint\r\n      axios\r\n        .delete(\r\n          `http://localhost:4000/api/reviews/${productId}/reviews/${reviewId}`\r\n        )\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            // Review deleted successfully\r\n            console.log('Review deleted successfully')\r\n            alert('Data Deleted')\r\n            // You can perform additional actions here if needed\r\n\r\n            // Refresh the product list to remove the deleted review\r\n            axios\r\n              .get('http://localhost:4000/api/products')\r\n              .then((response) => {\r\n                setProducts(response.data)\r\n              })\r\n              .catch((error) => {\r\n                console.error('Error fetching products:', error)\r\n              })\r\n          } else {\r\n            // Error deleting the review\r\n            console.error('Error deleting the review')\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error deleting the review:', error)\r\n        })\r\n    } else {\r\n      alert('Canceled')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='row'>\r\n        {products.map((product) => (\r\n          <div key={product._id} className='col-md-3 mb-4'>\r\n            <Card style={{ width: '18rem', margin: '20px' }}>\r\n              {/* Use the imported image as the source */}\r\n              <Card.Img\r\n                variant='top'\r\n                src={productImage}\r\n                alt={product.name} // Provide alt text for accessibility\r\n              />\r\n              <Card.Body>\r\n                <Card.Title>{product.name}</Card.Title>\r\n                <Card.Text> {product.description}</Card.Text>\r\n              </Card.Body>\r\n              <ListGroup className='list-group-flush'>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n              </ListGroup>\r\n              <ListGroup className='list-group-flush'>\r\n                <h5>Reviews:</h5>\r\n                {product.reviews.map((review, index) => (\r\n                  <div key={index}>\r\n                    <Card.Body>\r\n                      <ReactStars\r\n                        style={{ margin: '20px', paddingLeft: '60px' }}\r\n                        value={review.rating}\r\n                        edit={false}\r\n                        activeColors={[\r\n                          'red',\r\n                          'orange',\r\n                          '#FFCE00',\r\n                          '#9177FF',\r\n                          '#8568FC',\r\n                        ]}\r\n                      />\r\n                      <Card.Text> Comment: {review.comment}</Card.Text>\r\n                      <Link to={`/update/${product._id}/${review._id}`}>\r\n                        <Button variant='outline-info'>Edit</Button>\r\n                      </Link>\r\n                      <Button\r\n                        variant='outline-danger'\r\n                        onClick={() =>\r\n                          deleteReview(product._id, review._id, review.comment)\r\n                        }\r\n                        style={{ marginLeft: '10px' }} // Add margin to create space\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </Card.Body>\r\n                  </div>\r\n                ))}\r\n              </ListGroup>\r\n              {/* Add Review Form */}\r\n              <div className='review-form'>\r\n                <h5>Add a Review:</h5>\r\n                <div className='mb-2'>\r\n                  <input\r\n                    type='number'\r\n                    min='1'\r\n                    max='5'\r\n                    className={`form-control ${\r\n                      validationErrors[product._id]?.rating ? 'is-invalid' : ''\r\n                    }`}\r\n                    placeholder='Enter rating (1-5)'\r\n                    value={newReviews[product._id]?.rating || 0}\r\n                    onChange={(e) =>\r\n                      handleReviewChange(\r\n                        product._id,\r\n                        parseInt(e.target.value) || 0,\r\n                        newReviews[product._id]?.comment || ''\r\n                      )\r\n                    }\r\n                  />\r\n                  {validationErrors[product._id]?.rating && (\r\n                    <div className='invalid-feedback'>\r\n                      {validationErrors[product._id]?.rating}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='mb-2'>\r\n                  <textarea\r\n                    className={`form-control ${\r\n                      validationErrors[product._id]?.comment ? 'is-invalid' : ''\r\n                    }`}\r\n                    placeholder='Enter your review here...'\r\n                    value={newReviews[product._id]?.comment || ''}\r\n                    onChange={(e) =>\r\n                      handleReviewChange(\r\n                        product._id,\r\n                        newReviews[product._id]?.rating || 0,\r\n                        e.target.value\r\n                      )\r\n                    }\r\n                  ></textarea>\r\n                  {validationErrors[product._id]?.comment && (\r\n                    <div className='invalid-feedback'>\r\n                      {validationErrors[product._id]?.comment}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <Card.Body>\r\n                  <button\r\n                    className='btn btn-primary'\r\n                    onClick={() => handleSubmitReview(product._id)}\r\n                  >\r\n                    Add New Review\r\n                  </button>\r\n                </Card.Body>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserHome\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}