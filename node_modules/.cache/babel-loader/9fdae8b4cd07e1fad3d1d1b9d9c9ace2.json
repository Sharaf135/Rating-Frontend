{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\majas\\\\OneDrive\\\\Desktop\\\\ReviewAndRatings-MERN-main\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { memo, useState } from \"react\";\nimport { BsStar, BsStarFill, BsStarHalf } from \"./icons\";\nfunction RatingStar(props) {\n  var _props$value = props.value,\n    value = _props$value === void 0 ? 0 : _props$value,\n    _props$count = props.count,\n    count = _props$count === void 0 ? 5 : _props$count,\n    _props$size = props.size,\n    size = _props$size === void 0 ? 14 : _props$size,\n    _props$isEdit = props.isEdit,\n    isEdit = _props$isEdit === void 0 ? false : _props$isEdit,\n    _props$isHalf = props.isHalf,\n    isHalf = _props$isHalf === void 0 ? false : _props$isHalf,\n    _props$valueShow = props.valueShow,\n    valueShow = _props$valueShow === void 0 ? false : _props$valueShow,\n    _props$emptyIcon = props.emptyIcon,\n    emptyIcon = _props$emptyIcon === void 0 ? React.createElement(BsStar, null) : _props$emptyIcon,\n    _props$halfIcon = props.halfIcon,\n    halfIcon = _props$halfIcon === void 0 ? React.createElement(BsStarHalf, null) : _props$halfIcon,\n    _props$filledIcon = props.filledIcon,\n    filledIcon = _props$filledIcon === void 0 ? React.createElement(BsStarFill, null) : _props$filledIcon,\n    _props$activeColor = props.activeColor,\n    activeColor = _props$activeColor === void 0 ? \"#FED900\" : _props$activeColor,\n    _props$activeColors = props.activeColors,\n    activeColors = _props$activeColors === void 0 ? [] : _props$activeColors,\n    _props$inactiveColor = props.inactiveColor,\n    inactiveColor = _props$inactiveColor === void 0 ? \"#808080\" : _props$inactiveColor,\n    onChange = props.onChange,\n    _props$style = props.style,\n    style = _props$style === void 0 ? {} : _props$style,\n    _props$classNames = props.classNames,\n    classNames = _props$classNames === void 0 ? \"\" : _props$classNames;\n  var initialColor = activeColors[Math.round(value) - 1] ? activeColors[Math.round(value) - 1] : activeColor;\n  var _useState = useState(value),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentValue = _useState2[0],\n    setCurrentValue = _useState2[1];\n  var _useState3 = useState(initialColor),\n    _useState4 = _slicedToArray(_useState3, 2),\n    color = _useState4[0],\n    setColor = _useState4[1];\n  var clickHandler = function clickHandler(nextValue, e) {\n    var _a, _b, _c;\n    if (!isEdit) return;\n    var value = nextValue;\n    if (isHalf) {\n      var xPos = (e.pageX - ((_b = (_a = e.currentTarget) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect()) === null || _b === void 0 ? void 0 : _b.left)) / ((_c = e.currentTarget) === null || _c === void 0 ? void 0 : _c.offsetWidth);\n      if (xPos <= 0.5) {\n        nextValue -= 0.5;\n      }\n    }\n    setCurrentValue(nextValue);\n    // color set\n    if (typeof onChange === \"function\") onChange(nextValue);\n    var color = activeColors[value - 1] ? activeColors[value - 1] : activeColor;\n    setColor(color);\n  };\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: classNames,\n    style: Object.assign(Object.assign({}, style), {\n      display: \"flex\",\n      alignItems: \"center\",\n      fontSize: typeof size === \"number\" ? \"\".concat(size, \"px\") : size,\n      gap: 3\n    })\n  }, Array(count).fill(1).map(function (item, index) {\n    var roundedValue = Math.round(currentValue * 2) / 2;\n    var currentValueFloor = Math.floor(roundedValue);\n    var isActive = currentValueFloor >= index + 1;\n    // Check if the current value is a half value\n    var isHalfActive = roundedValue === index + 0.5;\n    // Determine the color and icon based on the current value and half value\n    var starColor = isHalfActive ? color : isActive ? color : inactiveColor;\n    var starIcon = isHalfActive ? halfIcon : isActive ? filledIcon : emptyIcon;\n    return React.createElement(\"span\", {\n      onClick: function onClick(e) {\n        return clickHandler(index + 1, e);\n      },\n      key: index,\n      style: {\n        color: starColor,\n        cursor: isEdit ? \"pointer\" : \"default\"\n      }\n    }, starIcon);\n  }), React.createElement(\"span\", {\n    style: {\n      color: inactiveColor\n    }\n  }, !!currentValue && valueShow && currentValue.toFixed(1))));\n}\nexport default memo(RatingStar);","map":null,"metadata":{},"sourceType":"module"}