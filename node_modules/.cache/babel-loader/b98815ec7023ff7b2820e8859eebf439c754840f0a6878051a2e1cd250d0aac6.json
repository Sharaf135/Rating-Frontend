{"ast":null,"code":"import React, { memo, useState } from \"react\";\nimport { BsStar, BsStarFill, BsStarHalf } from \"./icons\";\nfunction RatingStar(props) {\n  const {\n    value = 0,\n    count = 5,\n    size = 14,\n    isEdit = false,\n    isHalf = false,\n    valueShow = false,\n    emptyIcon = React.createElement(BsStar, null),\n    halfIcon = React.createElement(BsStarHalf, null),\n    filledIcon = React.createElement(BsStarFill, null),\n    activeColor = \"#FED900\",\n    activeColors = [],\n    inactiveColor = \"#808080\",\n    onChange,\n    style = {},\n    classNames = \"\"\n  } = props;\n  const initialColor = activeColors[Math.round(value) - 1] ? activeColors[Math.round(value) - 1] : activeColor;\n  const [currentValue, setCurrentValue] = useState(value);\n  const [color, setColor] = useState(initialColor);\n  const clickHandler = (nextValue, e) => {\n    var _a, _b, _c;\n    if (!isEdit) return;\n    const value = nextValue;\n    if (isHalf) {\n      const xPos = (e.pageX - ((_b = (_a = e.currentTarget) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect()) === null || _b === void 0 ? void 0 : _b.left)) / ((_c = e.currentTarget) === null || _c === void 0 ? void 0 : _c.offsetWidth);\n      if (xPos <= 0.5) {\n        nextValue -= 0.5;\n      }\n    }\n    setCurrentValue(nextValue);\n    // color set\n    if (typeof onChange === \"function\") onChange(nextValue);\n    const color = activeColors[value - 1] ? activeColors[value - 1] : activeColor;\n    setColor(color);\n  };\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: classNames,\n    style: Object.assign(Object.assign({}, style), {\n      display: \"flex\",\n      alignItems: \"center\",\n      fontSize: typeof size === \"number\" ? `${size}px` : size,\n      gap: 3\n    })\n  }, Array(count).fill(1).map((item, index) => {\n    const roundedValue = Math.round(currentValue * 2) / 2;\n    const currentValueFloor = Math.floor(roundedValue);\n    const isActive = currentValueFloor >= index + 1;\n    // Check if the current value is a half value\n    const isHalfActive = roundedValue === index + 0.5;\n    // Determine the color and icon based on the current value and half value\n    const starColor = isHalfActive ? color : isActive ? color : inactiveColor;\n    const starIcon = isHalfActive ? halfIcon : isActive ? filledIcon : emptyIcon;\n    return React.createElement(\"span\", {\n      onClick: e => clickHandler(index + 1, e),\n      key: index,\n      style: {\n        color: starColor,\n        cursor: isEdit ? \"pointer\" : \"default\"\n      }\n    }, starIcon);\n  }), React.createElement(\"span\", {\n    style: {\n      color: inactiveColor\n    }\n  }, !!currentValue && valueShow && currentValue.toFixed(1))));\n}\nexport default memo(RatingStar);","map":{"version":3,"names":["React","memo","useState","BsStar","BsStarFill","BsStarHalf","RatingStar","props","value","count","size","isEdit","isHalf","valueShow","emptyIcon","createElement","halfIcon","filledIcon","activeColor","activeColors","inactiveColor","onChange","style","classNames","initialColor","Math","round","currentValue","setCurrentValue","color","setColor","clickHandler","nextValue","e","_a","_b","_c","xPos","pageX","currentTarget","getBoundingClientRect","left","offsetWidth","Fragment","className","Object","assign","display","alignItems","fontSize","gap","Array","fill","map","item","index","roundedValue","currentValueFloor","floor","isActive","isHalfActive","starColor","starIcon","onClick","key","cursor","toFixed"],"sources":["C:/Users/majas/OneDrive/Desktop/ReviewAndRatings-MERN-main/frontend/node_modules/react-rating-star-with-type/dist/RatingStar.js"],"sourcesContent":["import React, { memo, useState } from \"react\";\nimport { BsStar, BsStarFill, BsStarHalf } from \"./icons\";\nfunction RatingStar(props) {\n    const { value = 0, count = 5, size = 14, isEdit = false, isHalf = false, valueShow = false, emptyIcon = React.createElement(BsStar, null), halfIcon = React.createElement(BsStarHalf, null), filledIcon = React.createElement(BsStarFill, null), activeColor = \"#FED900\", activeColors = [], inactiveColor = \"#808080\", onChange, style = {}, classNames = \"\", } = props;\n    const initialColor = activeColors[Math.round(value) - 1]\n        ? activeColors[Math.round(value) - 1]\n        : activeColor;\n    const [currentValue, setCurrentValue] = useState(value);\n    const [color, setColor] = useState(initialColor);\n    const clickHandler = (nextValue, e) => {\n        var _a, _b, _c;\n        if (!isEdit)\n            return;\n        const value = nextValue;\n        if (isHalf) {\n            const xPos = (e.pageX - ((_b = (_a = e.currentTarget) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect()) === null || _b === void 0 ? void 0 : _b.left)) /\n                ((_c = e.currentTarget) === null || _c === void 0 ? void 0 : _c.offsetWidth);\n            if (xPos <= 0.5) {\n                nextValue -= 0.5;\n            }\n        }\n        setCurrentValue(nextValue);\n        // color set\n        if (typeof onChange === \"function\")\n            onChange(nextValue);\n        const color = activeColors[value - 1]\n            ? activeColors[value - 1]\n            : activeColor;\n        setColor(color);\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: classNames, style: Object.assign(Object.assign({}, style), { display: \"flex\", alignItems: \"center\", fontSize: typeof size === \"number\" ? `${size}px` : size, gap: 3 }) },\n            Array(count)\n                .fill(1)\n                .map((item, index) => {\n                const roundedValue = Math.round(currentValue * 2) / 2;\n                const currentValueFloor = Math.floor(roundedValue);\n                const isActive = currentValueFloor >= index + 1;\n                // Check if the current value is a half value\n                const isHalfActive = roundedValue === index + 0.5;\n                // Determine the color and icon based on the current value and half value\n                const starColor = isHalfActive\n                    ? color\n                    : isActive\n                        ? color\n                        : inactiveColor;\n                const starIcon = isHalfActive\n                    ? halfIcon\n                    : isActive\n                        ? filledIcon\n                        : emptyIcon;\n                return (React.createElement(\"span\", { onClick: (e) => clickHandler(index + 1, e), key: index, style: {\n                        color: starColor,\n                        cursor: isEdit ? \"pointer\" : \"default\",\n                    } }, starIcon));\n            }),\n            React.createElement(\"span\", { style: { color: inactiveColor } }, !!currentValue && valueShow && currentValue.toFixed(1)))));\n}\nexport default memo(RatingStar);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}