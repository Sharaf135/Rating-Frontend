{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\majas\\\\OneDrive\\\\Desktop\\\\ReviewAndRatings-MERN-main\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\majas\\\\OneDrive\\\\Desktop\\\\ReviewAndRatings-MERN-main\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\majas\\\\OneDrive\\\\Desktop\\\\ReviewAndRatings-MERN-main\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\majas\\\\OneDrive\\\\Desktop\\\\ReviewAndRatings-MERN-main\\\\frontend\\\\src\\\\Pages\\\\UserHome.js\";\nimport React, { useEffect, useState } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport axios from 'axios';\nimport productImage from '../images/productImage.jpg'; // Import the image\nimport ReactStars from 'react-rating-star-with-type';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nfunction UserHome() {\n  var _this = this;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    products = _useState2[0],\n    setProducts = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newReviews = _useState4[0],\n    setNewReviews = _useState4[1]; // State to manage new reviews for each product\n  var _useState5 = useState({}),\n    _useState6 = _slicedToArray(_useState5, 2),\n    validationErrors = _useState6[0],\n    setValidationErrors = _useState6[1]; // State to manage validation errors\n  useEffect(function () {\n    // Fetch products from the API when the component mounts\n    axios.get('http://localhost:4000/api/products') // Update the API endpoint as needed\n    .then(function (response) {\n      setProducts(response.data);\n    }).catch(function (error) {\n      console.error('Error fetching products:', error);\n    });\n  }, []);\n\n  // Function to handle submitting a new review\n  var handleSubmitReview = function handleSubmitReview(productId) {\n    // Get the new review data for the specific product\n    var newReview = newReviews[productId];\n    if (!newReview) {\n      return; // Don't submit if no review data is available\n    }\n\n    // Validate the rating and comment before submission\n    var errors = {};\n    if (newReview.rating < 1 || newReview.rating > 5) {\n      errors[productId] = _objectSpread({}, errors[productId], {\n        rating: 'Rating must be between 1 and 5'\n      });\n    }\n    if (!newReview.comment.trim()) {\n      errors[productId] = _objectSpread({}, errors[productId], {\n        comment: 'Comment cannot be empty'\n      });\n    }\n\n    // If there are validation errors, update the state and stop submission\n    if (Object.keys(errors).length > 0) {\n      setValidationErrors(errors);\n      return;\n    }\n\n    // Send a POST request to your API to add the review to the database\n    axios.post(\"http://localhost:4000/api/reviews/\".concat(productId, \"/reviews\"), newReview).then(function (response) {\n      // Handle success (e.g., refresh the product list to display the new review)\n      // You can also reset the new review form fields here if needed\n      console.log('Review added:', response.data);\n\n      // Reset the new review and validation errors for this product\n      setNewReviews(_objectSpread({}, newReviews, _defineProperty({}, productId, {\n        rating: 0,\n        comment: ''\n      })));\n      setValidationErrors({});\n\n      // Refresh the product list to display the new review (optional)\n      axios.get('http://localhost:4000/api/products').then(function (response) {\n        setProducts(response.data);\n      }).catch(function (error) {\n        console.error('Error fetching products:', error);\n      });\n    }).catch(function (error) {\n      console.error('Error adding review:', error);\n    });\n  };\n\n  // Function to update the new review data in the state\n  var handleReviewChange = function handleReviewChange(productId, rating, comment) {\n    console.log(\"Product ID: \".concat(productId, \", Rating: \").concat(rating, \", Comment: \").concat(comment));\n    setNewReviews(_objectSpread({}, newReviews, _defineProperty({}, productId, {\n      rating: rating,\n      comment: comment\n    })));\n  };\n\n  // Function to delete a review\n  var deleteReview = function deleteReview(productId, reviewId, comment) {\n    if (window.confirm(\"Are you sure you want to delete \\\"\".concat(comment, \"\\\"?\"))) {\n      // Send a DELETE request to the API endpoint\n      axios.delete(\"http://localhost:4000/api/reviews/\".concat(productId, \"/reviews/\").concat(reviewId)).then(function (response) {\n        if (response.status === 200) {\n          // Review deleted successfully\n          console.log('Review deleted successfully');\n          alert('Data Deleted');\n          // You can perform additional actions here if needed\n\n          // Refresh the product list to remove the deleted review\n          axios.get('http://localhost:4000/api/products').then(function (response) {\n            setProducts(response.data);\n          }).catch(function (error) {\n            console.error('Error fetching products:', error);\n          });\n        } else {\n          // Error deleting the review\n          console.error('Error deleting the review');\n        }\n      }).catch(function (error) {\n        console.error('Error deleting the review:', error);\n      });\n    } else {\n      alert('Canceled');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, products.map(function (product) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: product._id,\n      className: \"col-md-3 mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '18rem',\n        margin: '20px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      src: productImage,\n      alt: product.name // Provide alt text for accessibility\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, product.name), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, \" \", product.description)), /*#__PURE__*/React.createElement(ListGroup, {\n      className: \"list-group-flush\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, \"Price: $\", product.price)), /*#__PURE__*/React.createElement(ListGroup, {\n      className: \"list-group-flush\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, \"Reviews:\"), product.reviews.map(function (review, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ReactStars, {\n        style: {\n          margin: '20px',\n          paddingLeft: '60px'\n        },\n        value: review.rating,\n        edit: false,\n        activeColors: ['red', 'orange', '#FFCE00', '#9177FF', '#8568FC'],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 23\n        }\n      }, \" Comment: \", review.comment), /*#__PURE__*/React.createElement(Link, {\n        to: \"/update/\".concat(product._id, \"/\").concat(review._id),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outline-info\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }\n      }, \"Edit\")), /*#__PURE__*/React.createElement(Button, {\n        variant: \"outline-danger\",\n        onClick: function onClick() {\n          return deleteReview(product._id, review._id, review.comment);\n        },\n        style: {\n          marginLeft: '10px'\n        } // Add margin to create space\n        ,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 23\n        }\n      }, \"Delete\")));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"review-form\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, \"Add a Review:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      min: \"1\",\n      max: \"5\",\n      className: \"form-control \".concat(validationErrors[product._id]?.rating ? 'is-invalid' : ''),\n      placeholder: \"Enter rating (1-5)\",\n      value: newReviews[product._id]?.rating || 0,\n      onChange: function onChange(e) {\n        return handleReviewChange(product._id, parseInt(e.target.value) || 0, newReviews[product._id]?.comment || '');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    }), validationErrors[product._id]?.rating && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, validationErrors[product._id]?.rating)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"form-control \".concat(validationErrors[product._id]?.comment ? 'is-invalid' : ''),\n      placeholder: \"Enter your review here...\",\n      value: newReviews[product._id]?.comment || '',\n      onChange: function onChange(e) {\n        return handleReviewChange(product._id, newReviews[product._id]?.rating || 0, e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 19\n      }\n    }), validationErrors[product._id]?.comment && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }, validationErrors[product._id]?.comment)), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: function onClick() {\n        return handleSubmitReview(product._id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 19\n      }\n    }, \"Add New Review\")))));\n  })));\n}\nexport default UserHome;","map":{"version":3,"names":["React","useEffect","useState","ListGroup","Card","axios","productImage","ReactStars","Button","Link","UserHome","_this","_useState","_useState2","_slicedToArray","products","setProducts","_useState3","_useState4","newReviews","setNewReviews","_useState5","_useState6","validationErrors","setValidationErrors","get","then","response","data","catch","error","console","handleSubmitReview","productId","newReview","errors","rating","_objectSpread","comment","trim","Object","keys","length","post","concat","log","_defineProperty","handleReviewChange","deleteReview","reviewId","window","confirm","delete","status","alert","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","product","key","_id","style","width","margin","Img","variant","src","alt","name","Body","Title","Text","description","Item","price","reviews","review","index","paddingLeft","value","edit","activeColors","to","onClick","marginLeft","type","min","max","placeholder","onChange","e","parseInt","target"],"sources":["C:/Users/majas/OneDrive/Desktop/ReviewAndRatings-MERN-main/frontend/src/Pages/UserHome.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Card from 'react-bootstrap/Card'\r\nimport axios from 'axios'\r\nimport productImage from '../images/productImage.jpg' // Import the image\r\nimport ReactStars from 'react-rating-star-with-type'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction UserHome() {\r\n  const [products, setProducts] = useState([])\r\n  const [newReviews, setNewReviews] = useState({}) // State to manage new reviews for each product\r\n  const [validationErrors, setValidationErrors] = useState({}) // State to manage validation errors\r\n\r\n  useEffect(() => {\r\n    // Fetch products from the API when the component mounts\r\n    axios\r\n      .get('http://localhost:4000/api/products') // Update the API endpoint as needed\r\n      .then((response) => {\r\n        setProducts(response.data)\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching products:', error)\r\n      })\r\n  }, [])\r\n\r\n  // Function to handle submitting a new review\r\n  const handleSubmitReview = (productId) => {\r\n    // Get the new review data for the specific product\r\n    const newReview = newReviews[productId]\r\n    if (!newReview) {\r\n      return // Don't submit if no review data is available\r\n    }\r\n\r\n    // Validate the rating and comment before submission\r\n    const errors = {}\r\n    if (newReview.rating < 1 || newReview.rating > 5) {\r\n      errors[productId] = {\r\n        ...errors[productId],\r\n        rating: 'Rating must be between 1 and 5',\r\n      }\r\n    }\r\n    if (!newReview.comment.trim()) {\r\n      errors[productId] = {\r\n        ...errors[productId],\r\n        comment: 'Comment cannot be empty',\r\n      }\r\n    }\r\n\r\n    // If there are validation errors, update the state and stop submission\r\n    if (Object.keys(errors).length > 0) {\r\n      setValidationErrors(errors)\r\n      return\r\n    }\r\n\r\n    // Send a POST request to your API to add the review to the database\r\n    axios\r\n      .post(`http://localhost:4000/api/reviews/${productId}/reviews`, newReview)\r\n      .then((response) => {\r\n        // Handle success (e.g., refresh the product list to display the new review)\r\n        // You can also reset the new review form fields here if needed\r\n        console.log('Review added:', response.data)\r\n\r\n        // Reset the new review and validation errors for this product\r\n        setNewReviews({\r\n          ...newReviews,\r\n          [productId]: { rating: 0, comment: '' },\r\n        })\r\n        setValidationErrors({})\r\n\r\n        // Refresh the product list to display the new review (optional)\r\n        axios\r\n          .get('http://localhost:4000/api/products')\r\n          .then((response) => {\r\n            setProducts(response.data)\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error fetching products:', error)\r\n          })\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error adding review:', error)\r\n      })\r\n  }\r\n\r\n  // Function to update the new review data in the state\r\n  const handleReviewChange = (productId, rating, comment) => {\r\n    console.log(\r\n      `Product ID: ${productId}, Rating: ${rating}, Comment: ${comment}`\r\n    )\r\n    setNewReviews({\r\n      ...newReviews,\r\n      [productId]: { rating, comment },\r\n    })\r\n  }\r\n\r\n  // Function to delete a review\r\n  const deleteReview = (productId, reviewId, comment) => {\r\n    if (window.confirm(`Are you sure you want to delete \"${comment}\"?`)) {\r\n      // Send a DELETE request to the API endpoint\r\n      axios\r\n        .delete(\r\n          `http://localhost:4000/api/reviews/${productId}/reviews/${reviewId}`\r\n        )\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            // Review deleted successfully\r\n            console.log('Review deleted successfully')\r\n            alert('Data Deleted')\r\n            // You can perform additional actions here if needed\r\n\r\n            // Refresh the product list to remove the deleted review\r\n            axios\r\n              .get('http://localhost:4000/api/products')\r\n              .then((response) => {\r\n                setProducts(response.data)\r\n              })\r\n              .catch((error) => {\r\n                console.error('Error fetching products:', error)\r\n              })\r\n          } else {\r\n            // Error deleting the review\r\n            console.error('Error deleting the review')\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error deleting the review:', error)\r\n        })\r\n    } else {\r\n      alert('Canceled')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='row'>\r\n        {products.map((product) => (\r\n          <div key={product._id} className='col-md-3 mb-4'>\r\n            <Card style={{ width: '18rem', margin: '20px' }}>\r\n              {/* Use the imported image as the source */}\r\n              <Card.Img\r\n                variant='top'\r\n                src={productImage}\r\n                alt={product.name} // Provide alt text for accessibility\r\n              />\r\n              <Card.Body>\r\n                <Card.Title>{product.name}</Card.Title>\r\n                <Card.Text> {product.description}</Card.Text>\r\n              </Card.Body>\r\n              <ListGroup className='list-group-flush'>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n              </ListGroup>\r\n              <ListGroup className='list-group-flush'>\r\n                <h5>Reviews:</h5>\r\n                {product.reviews.map((review, index) => (\r\n                  <div key={index}>\r\n                    <Card.Body>\r\n                      <ReactStars\r\n                        style={{ margin: '20px', paddingLeft: '60px' }}\r\n                        value={review.rating}\r\n                        edit={false}\r\n                        activeColors={[\r\n                          'red',\r\n                          'orange',\r\n                          '#FFCE00',\r\n                          '#9177FF',\r\n                          '#8568FC',\r\n                        ]}\r\n                      />\r\n                      <Card.Text> Comment: {review.comment}</Card.Text>\r\n                      <Link to={`/update/${product._id}/${review._id}`}>\r\n                        <Button variant='outline-info'>Edit</Button>\r\n                      </Link>\r\n                      <Button\r\n                        variant='outline-danger'\r\n                        onClick={() =>\r\n                          deleteReview(product._id, review._id, review.comment)\r\n                        }\r\n                        style={{ marginLeft: '10px' }} // Add margin to create space\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </Card.Body>\r\n                  </div>\r\n                ))}\r\n              </ListGroup>\r\n              {/* Add Review Form */}\r\n              <div className='review-form'>\r\n                <h5>Add a Review:</h5>\r\n                <div className='mb-2'>\r\n                  <input\r\n                    type='number'\r\n                    min='1'\r\n                    max='5'\r\n                    className={`form-control ${\r\n                      validationErrors[product._id]?.rating ? 'is-invalid' : ''\r\n                    }`}\r\n                    placeholder='Enter rating (1-5)'\r\n                    value={newReviews[product._id]?.rating || 0}\r\n                    onChange={(e) =>\r\n                      handleReviewChange(\r\n                        product._id,\r\n                        parseInt(e.target.value) || 0,\r\n                        newReviews[product._id]?.comment || ''\r\n                      )\r\n                    }\r\n                  />\r\n                  {validationErrors[product._id]?.rating && (\r\n                    <div className='invalid-feedback'>\r\n                      {validationErrors[product._id]?.rating}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className='mb-2'>\r\n                  <textarea\r\n                    className={`form-control ${\r\n                      validationErrors[product._id]?.comment ? 'is-invalid' : ''\r\n                    }`}\r\n                    placeholder='Enter your review here...'\r\n                    value={newReviews[product._id]?.comment || ''}\r\n                    onChange={(e) =>\r\n                      handleReviewChange(\r\n                        product._id,\r\n                        newReviews[product._id]?.rating || 0,\r\n                        e.target.value\r\n                      )\r\n                    }\r\n                  ></textarea>\r\n                  {validationErrors[product._id]?.comment && (\r\n                    <div className='invalid-feedback'>\r\n                      {validationErrors[product._id]?.comment}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <Card.Body>\r\n                  <button\r\n                    className='btn btn-primary'\r\n                    onClick={() => handleSubmitReview(product._id)}\r\n                  >\r\n                    Add New Review\r\n                  </button>\r\n                </Card.Body>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserHome\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}